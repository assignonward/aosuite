{
    "riceyCodes_O": [
        {
            "name_s": "ObTerm_o",
            "text_s": "Object terminator, indicates no more items in the object in bsonish lists",
            "type_y": "00"
        },
        {
            "name_s": "int64_i",
            "text_s": "Generic signed int64, use depends on context.",
            "type_y": "01"
        },
        {
            "name_s": "int32_l",
            "text_s": "Generic signed int32, use depends on context.",
            "type_y": "02"
        },
        {
            "name_s": "mpz_n",
            "text_s": "Generic MPZ large integer, use depends on context.",
            "type_y": "03"
        },
        {
            "name_s": "mpq_r",
            "text_s": "Generic MPQ large integer fraction, use depends on context.",
            "type_y": "04"
        },
        {
            "name_s": "type_y",
            "text_s": "Identifies an algorithm type for hash or crypto key, or other types depending on context",
            "type_y": "05"
        },
        {
            "name_s": "text_s",
            "text_s": "Generic string, use depends on context, for instance in an image object this would be the alt text",
            "type_y": "06"
        },
        {
            "name_s": "name_s",
            "text_s": "Name as a string, use depends on context, often a key name",
            "type_y": "26"
        },
        {
            "name_s": "code_s",
            "text_s": "Code as a string, use depends on context, often a key type",
            "type_y": "66"
        },
        {
            "name_s": "data_b",
            "text_s": "Generic data block, use determined by the object which contains it.",
            "type_y": "07"
        },
        {
            "name_s": "objectArray_O",
            "text_s": "A generic array of object elements",
            "type_y": "08"
        },
        {
            "name_s": "int64Array_I",
            "text_s": "A generic array of int64 elements",
            "type_y": "09"
        },
        {
            "name_s": "int32Array_L",
            "text_s": "A generic array of int32 elements",
            "type_y": "0A"
        },
        {
            "name_s": "mpzArray_N",
            "text_s": "A generic array of MPZ elements",
            "type_y": "0B"
        },
        {
            "name_s": "mpqArray_R",
            "text_s": "A generic array of MPQ elements",
            "type_y": "0C"
        },
        {
            "name_s": "riceyArray_Y",
            "text_s": "A generic array of Ricey elements",
            "type_y": "0D"
        },
        {
            "name_s": "stringArray_S",
            "text_s": "A generic array of string elements",
            "type_y": "0E"
        },
        {
            "name_s": "byteArrayArray_B",
            "text_s": "A generic array of byte array elementschainBlock_o 0xA000 // A Chain Block always contains a signedBlock_O which includes a time_i, and a signature_O that signs the whole signedBlock_O.",
            "type_y": "0F"
        },
        {
            "name_s": "signedBlock_o",
            "text_s": "A Signed Block in the chain always contains a parentSignature_O a time_i of when the block was signed, the signature_O is found in the object which contains the signedBlock_O.",
            "type_y": "60"
        },
        {
            "name_s": "parentSignature_o",
            "text_s": "Contains a copy of the signature_O of one or more (more in the case of merging forked chains) parent blocks.",
            "type_y": "40"
        },
        {
            "name_s": "signature_o",
            "text_s": "Hash object, only found in chainBlock_O and similar objects which contain a signedBlock_O, contains an algorithm id (type_y) and the hash by that algorithm of the binary representation of the objects in the signedBlock_O (data_b) and a timestamp (time_i) matching the time_i in the signedBlock_O and which must not be as old or older than any parent timestamp and also should not be in the future, these time_i are unique identifiers for chainBlock_O objects.",
            "type_y": "20"
        },
        {
            "name_s": "time_i",
            "text_s": "UTC time of block creation (microseconds since epoch x 189). May never be less than or equal to the timei of any parent block. Serves as a unique id for AOBO blocks.",
            "type_y": "21"
        },
        {
            "name_s": "AOShares_n",
            "text_s": "A quantity of shares - meaning depends on context",
            "type_y": "23"
        },
        {
            "name_s": "SHA256_y",
            "text_s": "algorithm ID (algor) for SHA2 - 256",
            "type_y": "25"
        },
        {
            "name_s": "ECB256_y",
            "text_s": "algorithm ID (algor) for Elliptic Curve ECDSA curve BrainpoolP256r1",
            "type_y": "45"
        },
        {
            "name_s": "RSA3072_y",
            "text_s": "algorithm ID (algor) for 3072 bit RSA - less commonly used algorithms get longer ricey codes",
            "type_y": "A145"
        },
        {
            "name_s": "SHA3b512_y",
            "text_s": "algorithm ID (algor) for SHA3 - 512",
            "type_y": "A125"
        },
        {
            "name_s": "jpg_y",
            "text_s": "Found in image objects, tells what format the data_b is to be interpreted as",
            "type_y": "9025"
        },
        {
            "name_s": "png_y",
            "text_s": "Found in image objects, tells what format the data_b is to be interpreted as",
            "type_y": "9045"
        },
        {
            "name_s": "riceyTypes_O",
            "text_s": "An array object which contains the description, name and ricey code 4 LSB for each defined ricey code type in the system.",
            "type_y": "D008"
        },
        {
            "name_s": "riceyCodes_O",
            "text_s": "An array object which contains the description, name and ricey code for each defined ricey code in the system.",
            "type_y": "D028"
        },
        {
            "name_s": "PcolTA01_y",
            "text_s": "Test protocol, symbol: TⒶ2021.9.7",
            "type_y": "A4D005"
        },
        {
            "name_s": "PcolTA02_y",
            "text_s": "Test protocol, symbol: TⒶ2021.10.13",
            "type_y": "A4D025"
        },
        {
            "name_s": "PcolA00_y",
            "text_s": "Live protocol, symbol: Ⓐ2021.11.15 Blockchain signing only, no shares or coin",
            "type_y": "A5D005"
        },
        {
            "name_s": "PcolA01_y",
            "text_s": "Live protocol, symbol: Ⓐ2021.12.15 Blockchain plus simple shares and coin, no fees",
            "type_y": "A5D025"
        },
        {
            "name_s": "ProtocolId_y",
            "text_s": "An Assign Onward Protocol identifier.",
            "type_y": "A0A545"
        },
        {
            "name_s": "ProtocolDef_O",
            "text_s": "An Assign Onward Protocol Definition - overall, defines an array of containers and contents ",
            "type_y": "A0A548"
        },
        {
            "name_s": "RequiredItems_Y",
            "text_s": "Items that must appear in a container (to fulfill the protocol requirements)",
            "type_y": "CD0D"
        },
        {
            "name_s": "OptionalItems_Y",
            "text_s": "Items that may optionally appear in a container, do not violate protocol if they are missing.",
            "type_y": "CD2D"
        },
        {
            "name_s": "RangeBounds_O",
            "text_s": "Boundaries for valid values",
            "type_y": "CD08"
        },
        {
            "name_s": "min_i",
            "text_s": "Used in range boundaries",
            "type_y": "41"
        },
        {
            "name_s": "min_l",
            "text_s": "Used in range boundaries",
            "type_y": "42"
        },
        {
            "name_s": "min_n",
            "text_s": "Used in range boundaries",
            "type_y": "43"
        },
        {
            "name_s": "min_r",
            "text_s": "Used in range boundaries",
            "type_y": "44"
        },
        {
            "name_s": "max_i",
            "text_s": "Used in range boundaries",
            "type_y": "61"
        },
        {
            "name_s": "max_l",
            "text_s": "Used in range boundaries",
            "type_y": "62"
        },
        {
            "name_s": "max_n",
            "text_s": "Used in range boundaries",
            "type_y": "63"
        },
        {
            "name_s": "max_r",
            "text_s": "Used in range boundaries",
            "type_y": "64"
        },
        {
            "name_s": "enum_Y",
            "text_s": "Used to define available choices",
            "type_y": "4D"
        },
        {
            "name_s": "enum_S",
            "text_s": "Used to define available choices",
            "type_y": "4E"
        },
        {
            "name_s": "GenesisBlock_o",
            "text_s": "An Assign Onward Genesis Block. With a signature_o which includes a timei, and other definitions for the chain.",
            "type_y": "A0B000"
        },
        {
            "name_s": "ChainDesc_o",
            "text_s": "Chain Description, generally only found in the Genesis Block - descriptive items like name, symbol, number of coins represented by all shares, etc.",
            "type_y": "A0CD00"
        },
        {
            "name_s": "ChainFunc_o",
            "text_s": "Chain Functional items description, generally only found in the Genesis Block - functional items like number of shares, expiration rates, recording fees, etc.",
            "type_y": "A0CF00"
        },
        {
            "name_s": "EndChain_o",
            "text_s": "Used when reporting the last blocks in a chain, this block is a signal that all known blocks are received. Has a pzzzO and zzzO and timei of when it was reported, but contains no transaction information and will (usually) be discarded when appending new transaction blocks to its parent.",
            "type_y": "A0EC00"
        },
        {
            "name_s": "Symbol_s",
            "text_s": "A short string like ITC representing the chain.",
            "type_y": "A0CD06"
        },
        {
            "name_s": "CdName_s",
            "text_s": "A longer string like Itcoin representing the chain.",
            "type_y": "A0CD26"
        },
        {
            "name_s": "Tagline_s",
            "text_s": "A brief sentence like \"The greatest blockchain ever\" describing the chain.",
            "type_y": "A0CD46"
        },
        {
            "name_s": "Description_s",
            "text_s": "A paragraph (say 1000-ish characters) describing the chain.",
            "type_y": "A0CD66"
        },
        {
            "name_s": "Icon_o",
            "text_s": "A square-ish image that looks good small, representing the chain.",
            "type_y": "A0CD20"
        },
        {
            "name_s": "Banner_o",
            "text_s": "A wide image that might be displayed near the top of a page, representing the chain.",
            "type_y": "A0CD40"
        },
        {
            "name_s": "Image_o",
            "text_s": "A more detailed image representing the chain.",
            "type_y": "A0CD60"
        },
        {
            "name_s": "CfShares_n",
            "text_s": "The number of shares recorded in the Genesis block.",
            "type_y": "A0CF03"
        },
        {
            "name_s": "CfCoins_n",
            "text_s": "The number of \"coins\" all the shares in this chain represent.",
            "type_y": "A0CF23"
        },
        {
            "name_s": "CfRecFee_r",
            "text_s": "The number of coins per byte charged to record data on this chain (usually 1/a very large number).",
            "type_y": "A0CF04"
        },
        {
            "name_s": "chainBlock_o",
            "text_s": "An Assign Onward Chain Block. With a signature_o which includes a timei, and the signature of the parent(s).",
            "type_y": "A0CB00"
        },
        {
            "name_s": "ExchAdvert_o",
            "text_s": "An exchange advertisement for cross chain exchange swaps (expressed in coins for coins)",
            "type_y": "AAA000"
        },
        {
            "name_s": "Proposal_o",
            "text_s": "A share swap proposal",
            "type_y": "AAA020"
        },
        {
            "name_s": "Offer_o",
            "text_s": "A share swap offer",
            "type_y": "AAA040"
        },
        {
            "name_s": "Acceptance_o",
            "text_s": "A share swap acceptance of offer",
            "type_y": "AAA060"
        },
        {
            "name_s": "Cancellation_o",
            "text_s": "A share swap notice of cancellation (for cause, usually time expiration)",
            "type_y": "AAAF00"
        },
        {
            "name_s": "Identity_o",
            "text_s": "A cross chain identity, may be tied to share ownership but carries its own key pair",
            "type_y": "A110"
        }
    ],
    "riceyTypes_O": [
        {
            "code_s": "o",
            "name_s": "OBJECT",
            "text_s": "in json: a comma separated list of zero or more key-value pairs json encases each pair in {}, all keys unique within the object, in bson there are no separators, a key of Obterm ends the current object",
            "type_y": "0"
        },
        {
            "code_s": "i",
            "name_s": "INT64",
            "text_s": "64 bit signed integer - json in an unquoted ASCII decimal string, bson as 8 bytes using void qToLittleEndian(qint64 src, uchar *dest)",
            "type_y": "1"
        },
        {
            "code_s": "l",
            "name_s": "INT32",
            "text_s": "32 bit signed integer - json in an unquoted ASCII decimal string, bson as 4 bytes using void qToLittleEndian(qint32 src, uchar *dest)",
            "type_y": "2"
        },
        {
            "code_s": "n",
            "name_s": "MPZ",
            "text_s": "libGMP signed integer - json as a quoted ASCII decimal string, bson as an object carrying the native GMP values",
            "type_y": "3"
        },
        {
            "code_s": "r",
            "name_s": "MPQ",
            "text_s": "libGMP rational fraction - json as a quoted ASCII decimal string/ASCII decimal string, bson as an object carrying the native GMP",
            "type_y": "4"
        },
        {
            "code_s": "y",
            "name_s": "RCODE",
            "text_s": "Ricey code - json as the table defined name, bson as a list of bytes: last byte has 0 in most significant bit.",
            "type_y": "5"
        },
        {
            "code_s": "s",
            "name_s": "STRING",
            "text_s": "UTF8 encoded string - json as UTF8 string, bson as int32_t length (includes terminator) followed by UTF8 string plus null terminator",
            "type_y": "6"
        },
        {
            "code_s": "b",
            "name_s": "BYTEARRAY",
            "text_s": "ByteArray (aka octet stream) - json as hex string, bson as int32_t length followed by length octets",
            "type_y": "7"
        },
        {
            "code_s": "O",
            "name_s": "OBJECT_ARRAY",
            "text_s": "array of zero or more objects encased in []",
            "type_y": "8"
        },
        {
            "code_s": "I",
            "name_s": "INT64_ARRAY",
            "text_s": "array of zero or more 64 bit signed integers stored as above, comma separated in json, rice code size followed by the array in bson",
            "type_y": "9"
        },
        {
            "code_s": "L",
            "name_s": "INT32_ARRAY",
            "text_s": "array of zero or more 32 bit signed integers stored as above, comma separated in json, rice code size followed by the array in bson",
            "type_y": "A"
        },
        {
            "code_s": "N",
            "name_s": "MPZ_ARRAY",
            "text_s": "array of zero or more libGMP signed integers stored as described above",
            "type_y": "B"
        },
        {
            "code_s": "R",
            "name_s": "MPQ_ARRAY",
            "text_s": "array of zero or more libGMP rational fractions stored as described above",
            "type_y": "C"
        },
        {
            "code_s": "Y",
            "name_s": "RCODE_ARRAY",
            "text_s": "array of zero or more Ricey codes, quoted hexadecimal and comma separated in json, starts with a rice code size followed by the array in bson",
            "type_y": "D"
        },
        {
            "code_s": "S",
            "name_s": "STRING_ARRAY",
            "text_s": "array of zero or more UTF-8 encoded strings - json as quoted, escaped UTF-8 string, bson as int32_t length followed by UTF-8 string, no null terminator",
            "type_y": "E"
        },
        {
            "code_s": "B",
            "name_s": "BYTEARRAY_ARRAY",
            "text_s": "ByteArray (aka octet stream) - json as hex string, bson as int32_t length followed by length octets",
            "type_y": "F"
        },
        {
            "code_s": "z",
            "name_s": "NULL",
            "text_s": "A null block value type, used as an error flag ",
            "type_y": "10"
        },
        {
            "code_s": "*",
            "name_s": "ARRAY",
            "text_s": "this bit is always set in array types",
            "type_y": "8"
        },
        {
            "code_s": "*",
            "name_s": "TYPEMASK",
            "text_s": "used to get the contained value type out of an array type ",
            "type_y": "7"
        },
        {
            "code_s": "*",
            "name_s": "OBTYPEMASK",
            "text_s": "used to get the contained value type out of an object type",
            "type_y": "1F"
        }
    ]
}
